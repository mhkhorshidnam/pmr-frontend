/* اعمال اجباری فونت Vazirmatn به همه عناصر برای اطمینان از یکدستی */
* {
  font-family: 'Vazirmatn', sans-serif !important;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

/* تعریف پالت رنگ بر اساس تصویر شما و استایل تپسی */
:root {
  --primary-dark-blue: #1A2F50;
  --primary-accent-blue: #3A7DE8;
  --primary-accent-orange: #FF8C00;
  --light-bg-blue: #E9F4FF;
  --text-dark: #2C3E50;
  --text-light: #6A7F9A;
  --border-light: #CFE2F7;
  --white: #FFFFFF;
}

body {
  background-color: var(--light-bg-blue);
  color: var(--text-dark);
  padding: 1rem;
  margin: 0;
  direction: rtl;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  font-family: 'Vazirmatn', sans-serif;
}

.container {
  max-width: 700px;
  width: 100%;
  margin: 0 auto;
  background-color: var(--white);
  padding: 1.5rem 2rem;
  border-radius: 20px;
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
}

/* 1. تیتر اصلی (h1) */
h1 {
  font-size: 2.2rem;
  text-align: center;
  margin-bottom: 0.8rem;
  color: var(--primary-dark-blue);
  font-weight: 800;
  line-height: 1.2;
}

/* h2 دیگر در صفحه شما استفاده نمی‌شود، اما اگر در آینده نیاز شد، می‌توانید استایل آن را اینجا نگه دارید */
h2 {
  font-size: 1.8rem;
  text-align: center;
  margin-bottom: 0.8rem;
  color: var(--primary-dark-blue);
  font-weight: 800;
  line-height: 1.2;
}

/* 2. تیترهای دوم (h3 خارج از result-box) */
h3 {
  font-size: 1.8rem;
  text-align: center;
  margin-top: 1.2rem;
  margin-bottom: 0.3rem;
  color: var(--primary-dark-blue);
  font-weight: 700;
}

label {
  display: block;
  margin-top: 0.6rem;
  margin-bottom: 0.1rem;
  font-size: 0.95rem;
  color: var(--text-dark);
  font-weight: 500;
}

input[type="text"],
input[type="file"] {
  width: 100%;
  padding: 0.6rem 0.8rem;
  background: var(--light-bg-blue);
  color: var(--text-dark);
  border: 1px solid var(--border-light);
  border-radius: 10px;
  font-size: 0.95rem;
  transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

input[type="text"]:focus,
input[type="file"]:focus {
  border-color: var(--primary-accent-blue);
  box-shadow: 0 0 0 3px rgba(58, 125, 232, 0.2);
  outline: none;
}

button {
  width: 100%;
  margin-top: 1.5rem;
  padding: 0.7rem 1rem;
  background-color: var(--primary-accent-orange);
  border: none;
  border-radius: 10px;
  font-size: 1rem;
  color: var(--white);
  cursor: pointer;
  transition: background-color 0.3s ease, transform 0.15s ease;
  font-weight: 700;
  box-shadow: 0 6px 12px rgba(255, 140, 0, 0.2);
}

button:hover {
  background-color: #E67A00;
  transform: translateY(-2px);
  box-shadow: 0 9px 15px rgba(255, 140, 0, 0.3);
}

.result-section {
  margin-top: 2rem;
}

.result-box {
  background: var(--light-bg-blue);
  padding: 0.8rem 1.2rem;
  border-radius: 10px;
  margin-top: 0.6rem;
  font-size: 0.9rem;
  color: var(--text-dark);
  white-space: pre-wrap;
  overflow-wrap: break-word;
  word-wrap: break-word;
  line-height: 1.25;
  border: 1px solid var(--border-light);
  text-align: right;
  direction: rtl;
  width: auto;
  max-width: 100%;
  overflow-x: hidden;
  font-family: 'Vazirmatn', sans-serif;
}

/* سبک‌های پیام موفقیت */
.success-message {
  position: fixed;
  top: 1rem;
  left: 50%;
  transform: translateX(-50%);
  background-color: var(--primary-accent-blue);
  color: var(--white);
  padding: 0.7rem 1.2rem;
  border-radius: 8px;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.5s ease;
  z-index: 9999;
  font-size: 0.9rem;
  font-weight: 600;
    }

.success-message.show {
  opacity: 1;
}

.hidden {
  display: none;
}

/* استایل‌های جدید برای نوار پیشرفت */
.progress-container {
  width: 100%;
  height: 18px;
  background-color: var(--border-light);
  border-radius: 9px;
  margin-top: 1rem;
  overflow: hidden;
  position: relative;
}

.progress-bar-fill {
  height: 100%;
  width: 0%;
  background-color: var(--primary-accent-blue);
  border-radius: 9px;
  transition: width 0.3s ease;
}

.progress-text {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: var(--primary-dark-blue);
  font-size: 0.8rem;
  font-weight: 600;
    }

/* استایل برای هدینگ‌های (h1 تا h6) که واقعاً تیتر هستند و توسط Markdown تولید می‌شوند */
.result-box h1,
.result-box h2,
.result-box h3,
.result-box h4,
.result-box h5,
.result-box h6 {
  font-size: 1.2rem;
  margin-top: 0.8rem;
  margin-bottom: 0.4rem;
  line-height: 1.2;
  color: var(--text-dark);
  font-weight: 700;
  text-align: right;
  font-family: 'Vazirmatn', sans-serif;
}

.result-box p {
  margin-bottom: 0.4rem;
  line-height: 1.25;
  text-align: right;
  font-family: 'Vazirmatn', sans-serif;
}

.result-box ul,
.result-box ol {
  padding-right: 1.5rem;
  margin-left: 0;
  margin-bottom: 0.4rem;
  list-style-position: inside;
  text-align: right;
  font-family: 'Vazirmatn', sans-serif;
}

.result-box li {
  margin-bottom: 0.2rem;
  line-height: 1.25;
  text-align: right;
  font-family: 'Vazirmatn', sans-serif;
}

/* استایل برای متن‌های بولد شده (strong) که تیتر هستند (مانند سناریو، شاخص‌های مورد سنجش و ...) */
.result-box strong {
    font-weight: 700;
    font-size: 1.2rem;
    display: block;
    margin-top: 0.8rem;
    margin-bottom: 0.4rem;
    color: var(--primary-dark-blue);
    font-family: 'Vazirmatn', sans-serif;
}
.result-box em {
    font-weight: 700;
    font-family: 'Vazirmatn', sans-serif;
}

/* استایل برای آیکون‌ها - مخفی کردن آن‌ها */
.title-icon {
  display: none !important;
    }
    ```

**۳. فایل `script.js` را باز کنید و کل محتوای آن را با کد زیر جایگزین کنید:**

```javascript
document.getElementById("upload-form").addEventListener("submit", async function (e) {
  e.preventDefault();
  console.log("Form submission initiated.");

  const progressBarContainer = document.getElementById("upload-progress-container");
  const progressBarFill = document.getElementById("upload-progress-fill");
  const progressBarText = document.getElementById("upload-progress-text");
  const submitButton = document.querySelector("#upload-form button[type='submit']");

  progressBarFill.style.width = '0%';
  progressBarText.innerText = '0%';
  progressBarContainer.classList.remove("hidden");
  submitButton.disabled = true;

  document.getElementById("resume-analysis").innerHTML = "";
  document.getElementById("interview-scenario").innerHTML = "";

  const candidateName = document.getElementById("candidate-name").value;
  const resumeFile = document.getElementById("resume-file").files[0];
  const interviewFile = document.getElementById("interview-file").files[0];

  const formData = new FormData();
  formData.append("candidate_name", candidateName);

  async function extractTextFromPdf(file) {
    const arrayBuffer = await file.arrayBuffer();
    if (!pdfjsLib.GlobalWorkerOptions.workerSrc) {
        pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.4.120/pdf.worker.min.js';
    }

    try {
      const pdf = await pdfjsLib.getDocument({ data: arrayBuffer }).promise;
      let fullText = "";
      for (let i = 1; i <= pdf.numPages; i++) {
        const page = await pdf.getPage(i);
        const textContent = await page.getTextContent();
        const pageText = textContent.items.map(item => item.str).join(" ");
        fullText += pageText + "\n";
      }
      return fullText.trim();
    } catch (error) {
      console.error("خطا در استخراج متن از PDF:", error);
      return "";
    }
  }

  let resumeText = "";
  let interviewText = "";

  if (resumeFile) {
    if (resumeFile.type === 'application/pdf') {
      resumeText = await extractTextFromPdf(resumeFile);
    } else {
      console.warn("فایل رزومه PDF نیست. متن استخراج نخواهد شد.");
      resumeText = "فایل رزومه قابل پردازش نیست (فقط PDF پشتیبانی می شود).";
    }
  }

  if (interviewFile) {
    if (interviewFile.type === 'application/pdf') {
      interviewText = await extractTextFromPdf(interviewFile);
    } else {
      console.warn("فایل فرم مصاحبه PDF نیست. متن استخراج نخواهد شد.");
      interviewText = "فایل فرم مصاحبه قابل پردازش نیست (فقط PDF پشتیبانی می شود).";
    }
  }
  
  formData.append("resume_text", resumeText);
  formData.append("interview_text", interviewText);

  const webhookUrl = "https://pmrecruitment.darkube.app/webhook/upload-files";

  const xhr = new XMLHttpRequest();

  xhr.open("POST", webhookUrl);
  xhr.setRequestHeader('Cache-Control', 'no-store');

  xhr.upload.onprogress = function(event) {
    if (event.lengthComputable) {
      const percentComplete = (event.loaded / event.total) * 100;
      progressBarFill.style.width = percentComplete.toFixed(0) + '%';
      progressBarText.innerText = percentComplete.toFixed(0) + '%';
    }
  };

  xhr.onload = async function() {
    submitButton.disabled = false;
    if (xhr.status >= 200 && xhr.status < 300) {
      progressBarContainer.classList.add("hidden");
      progressBarFill.style.width = '100%';
      progressBarText.innerText = '100%';

      try {
        const responseText = xhr.responseText;
        console.log("Raw response text from webhook:", responseText);

        let result;
        try {
            result = JSON.parse(responseText);
        } catch (jsonError) {
            console.error("خطا در تبدیل پاسخ به JSON:", jsonError);
            console.error("پاسخ دریافتی که باعث خطا شد:", responseText);
            throw new Error("پاسخ دریافتی JSON معتبر نیست.");
        }
        
        console.log("Parsed JSON result:", result);

        const dataToDisplay = Array.isArray(result) && result.length > 0 ? result[0] : result;

        document.getElementById("resume-analysis").innerHTML =
          marked.parse(dataToDisplay.resume_analysis) || "نتیجه‌ای برای تحلیل رزومه یافت نشد.";
        document.getElementById("interview-scenario").innerHTML = 
          marked.parse(dataToDisplay.interview_scenario) || "سناریوی مصاحبه‌ای یافت نشد.";


        const successMessage = document.getElementById("upload-success");
        successMessage.classList.remove("hidden");
        successMessage.classList.add("show");
        document.getElementById("success-sound").play();
        setTimeout(() => {
          successMessage.classList.remove("show");
          successMessage.classList.add("hidden");
        }, 3000);

      } catch (error) {
        console.error("خطا در پردازش پاسخ:", error);
        document.getElementById("resume-analysis").innerHTML = "خطا در پردازش پاسخ از سرور.";
        document.getElementById("interview-scenario").innerHTML = "";
      }
    } else {
      console.error("خطا در درخواست HTTP:", xhr.status, xhr.statusText, xhr.responseText);
      progressBarContainer.classList.add("hidden");
      document.getElementById("resume-analysis").innerHTML = "خطا در برقراری ارتباط با سرور: " + xhr.status;
      document.getElementById("interview-scenario").innerHTML = "";
    }
  };

  xhr.onerror = function() {
    submitButton.disabled = false;
    progressBarContainer.classList.add("hidden");
    console.error("خطای شبکه یا CORS رخ داد.");
    document.getElementById("resume-analysis").innerHTML = "خطای شبکه یا CORS رخ داد. لطفا دوباره تلاش کنید.";
    document.getElementById("interview-scenario").innerHTML = "";
  };

  xhr.send(formData);
});